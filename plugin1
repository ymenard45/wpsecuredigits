<?php
/**
 * Plugin Name: WP 2FA Authentificator
 * Plugin URI: https://example.com/wp-2FA-authentificator
 * Description: Un plugin d'authentification à deux facteurs pour WordPress.
 * Version: 1.0.0
 * Author: Your Name
 * Author URI: https://example.com
 * License: GPL2
 */

require_once 'vendor/autoload.php';


function wp2fa_create_user_profile_fields($user) {
    $user_id = $user->ID;
    $secret = get_user_meta($user_id, 'wp2fa_secret', true);
    $recovery_codes = get_user_meta($user_id, 'wp2fa_recovery_codes', true);
    
    if (empty($secret)) {
        $google2fa = new PragmaRX\Google2FA\Google2FA();
        $secret = $google2fa->generateSecretKey();
        update_user_meta($user_id, 'wp2fa_secret', $secret);
    }
    
    if (empty($recovery_codes)) {
        $recovery_codes = generate_recovery_codes();
        update_user_meta($user_id, 'wp2fa_recovery_codes', $recovery_codes);
    }

    $google2fa_url = (new PragmaRX\Google2FA\Google2FA())->getQRCodeUrl(
        get_bloginfo('name'),
        $user->user_email,
        $secret
    );
    ?>
                <h2>Authentification à deux facteurs</h2>
                <table class="form-table">
                    <tr>
                        <th><label for="wp2fa_secret">Secret</label></th>
                        <td>
                            <img src="<?php echo $google2fa_url; ?>" alt="QR Code"><br>
                            <input type="text" name="wp2fa_secret" id="wp2fa_secret" value="<?php echo esc_attr($secret); ?>" class="regular-text" readonly><br>
                            <span class="description">Scannez ce QR code avec Google Authenticator ou saisissez ce secret manuellement.</span>
                        </td>
                    </tr>
                    <tr>
                        <th><label for="wp2fa_recovery_codes">Codes de secours</label></th>
                        <td>
                            <button type="button" class="button" id="wp2fa_generate_recovery_codes">Recevoir de nouveaux codes de sécurité</button>
                            <div id="wp2fa_recovery_codes_container" style="display:none;">
                                <ul></ul>
                            </div>
                            <span class="description">Ces codes de secours peuvent être utilisés pour vous connecter si vous perdez l'accès à votre application d'authentification.</span>
                        </td>
                    </tr>
                </table>

                <script>
                    document.getElementById('wp2fa_generate_recovery_codes').addEventListener('click', function() {
                        var recoveryCodesContainer = document.getElementById('wp2fa_recovery_codes_container');
                        var recoveryCodesList = recoveryCodesContainer.querySelector('ul');
                        recoveryCodesList.innerHTML = '';

                        <?php $new_recovery_codes = generate_recovery_codes(); ?>
                        <?php update_user_meta($user_id, 'wp2fa_recovery_codes', $new_recovery_codes); ?>

                        var recoveryCodes = <?php echo json_encode($new_recovery_codes); ?>;
                        recoveryCodes.forEach(function(code) {
                            var listItem = document.createElement('li');
                            listItem.textContent = code;
                            recoveryCodesList.appendChild(listItem);
                        });

                        recoveryCodesContainer.style.display = 'block';
                    });
                </script>
                <?php
            }

            add_action('show_user_profile', 'wp2fa_create_user_profile_fields');
            add_action('edit_user_profile', 'wp2fa_create_user_profile_fields');

//  gère l'enregistrement des champs ajoutés au profil de l'utilisateur lorsqu'ils sont mis à jour 

            function wp2fa_save_user_profile_fields($user_id) {
                if (!current_user_can('edit_user', $user_id)) {
                    return false;
                }

                if (isset($_POST['wp2fa_secret'])) {
                    update_user_meta($user_id, 'wp2fa_secret', sanitize_text_field($_POST['wp2fa_secret']));
                }
            }

            add_action('personal_options_update', 'wp2fa_save_user_profile_fields');
            add_action('edit_user_profile_update', 'wp2fa_save_user_profile_fields');

// générer les codes de secours 

            function generate_recovery_codes($num_codes = 5, $code_length = 24) {
                $codes = [];

                for ($i = 0; $i < $num_codes; $i++) {
                    $codes[] = strtoupper(wp_generate_password($code_length, false, false));
                }

                return $codes;
            }

//vérifier les codes de secours lors de la connexion

 function wp2fa_verify_code($user_id, $code, $backup_code = false) {
    if (empty($user_id) || empty($code)) {
        return false;
    }

    $secret = get_user_meta($user_id, 'wp2fa_secret_key', true);

    if ($backup_code) {
        $backup_codes = get_user_meta($user_id, 'wp2fa_backup_codes', true);

        if (empty($backup_codes)) {
            return false;
        }

        foreach ($backup_codes as $index => $stored_code) {
            if (hash_equals($stored_code, $code)) {
                // Remove used backup code
                unset($backup_codes[$index]);
                update_user_meta($user_id, 'wp2fa_backup_codes', array_values($backup_codes));
                return true;
            }
        }
    } else {
        if (empty($secret)) {
            return false;
        }

        // Vérification du code TOTP
        require_once 'lib/GoogleAuthenticator.php';
        $gAuth = new PHPGangsta_GoogleAuthenticator();

        // La période de temps pendant laquelle le code est valide (en secondes)
        $time_window = apply_filters('wp2fa_totp_time_window', 30);

        // Vérifier si le code est valide pour la période de temps actuelle ou les périodes de temps adjacentes
        for ($i = -1; $i <= 1; $i++) {
            if ($gAuth->verifyCode($secret, $code, 0, $time_window * $i)) {
                return true;
            }
        }
    }

    return false;
}





// ajouter le bouton envoi des codes de secours

            function wp2fa_add_user_profile_fields($user) {
                // ...
                
                // Ajouter un bouton pour demander de nouveaux codes de secours
                ?>
                <tr>
                    <th><label for="wp2fa-request-recovery-codes"><?php _e('Recevoir de nouveaux codes de sécurité'); ?></label></th>
                    <td>
                        <button type="button" name="wp2fa-request-recovery-codes" id="wp2fa-request-recovery-codes" class="button button-primary">
                            <?php _e('Demander de nouveaux codes'); ?>
                        </button>
                    </td>
                </tr>
                <?php
            }

// javascript pour envoyer les codes

            function wp2fa_enqueue_scripts($hook) {
                if ('profile.php' !== $hook && 'user-edit.php' !== $hook) {
                    return;
                }

                wp_enqueue_script('wp2fa-profile', plugins_url('js/profile.js', __FILE__), ['jquery'], false, true);
                wp_localize_script('wp2fa-profile', 'wp2fa', ['ajax_url' => admin_url('admin-ajax.php')]);
            }

            add_action('admin_enqueue_scripts', 'wp2fa_enqueue_scripts');


// envoyer les codes de secours par e-mail 

            function wp2fa_request_recovery_codes() {
                check_ajax_referer('update-user_' . get_current_user_id(), '_wpnonce', true);

                $user = wp_get_current_user();
                $recovery_codes = generate_recovery_codes();

                update_user_meta($user->ID, 'wp2fa_recovery_codes', $recovery_codes);

                $email_subject = __('Vos codes de secours pour l\'authentification à deux facteurs');
                $email_content = sprintf(__('Bonjour %s,' . "\n\n" . 'Voici vos codes de secours pour l\'authentification à deux facteurs :' . "\n\n" . '%s' . "\n\n" . 'Conservez-les en lieu sûr et ne les partagez pas. Vous pouvez utiliser chaque code une seule fois lors de la connexion si vous ne pouvez pas utiliser votre application d\'authentification.' . "\n\n" . 'Cordialement,' . "\n" . 'L\'équipe'), $user->display_name, implode("\n", $recovery_codes));

                if (wp_mail($user->user_email, $email_subject, $email_content)) {
                    wp_send_json_success();
                } else {
                    wp_send_json_error();
                }
            }

            add_action('wp_ajax_wp2fa_request_recovery_codes', 'wp2fa_request_recovery_codes');

// 

function is_valid_recovery_code($user_id, $recovery_code) {
    $stored_recovery_codes = get_user_meta($user_id, 'wp2fa_recovery_codes', true);

    if (!empty($stored_recovery_codes) && is_array($stored_recovery_codes)) {
        foreach ($stored_recovery_codes as $key => $code) {
            if (hash_equals($code, $recovery_code)) {
                unset($stored_recovery_codes[$key]);
                update_user_meta($user_id, 'wp2fa_recovery_codes', array_values($stored_recovery_codes));
                return true;
            }
        }
    }

    return false;
}

 
function wp2fa_login_verify() {
    if (isset($_POST['wp2fa_totp']) && isset($_POST['wp2fa_login_nonce'])) {
        $user = wp_get_current_user();

        if (wp_verify_nonce($_POST['wp2fa_login_nonce'], 'wp2fa_login_verify_nonce_' . $user->ID)) {
            $totp = sanitize_text_field($_POST['wp2fa_totp']);

            if (is_valid_totp($user->ID, $totp) || is_valid_recovery_code($user->ID, $totp)) {
                delete_user_meta($user->ID, 'wp2fa_login_nonce');
                delete_user_meta($user->ID, 'wp2fa_login_timestamp');
                wp_safe_redirect(admin_url());
                exit;
            } else {
                wp2fa_login_failed($user);
            }
        }
    }
}


//  focntions mises à jour

function wp2fa_enable_2fa() {
    $user = wp_get_current_user();
    $user_id = $user->ID;
    $secret_key = get_user_meta($user_id, 'wp2fa_secret_key', true);
    $is_enabled = get_user_meta($user_id, 'wp2fa_is_enabled', true);
    $is_activated = false;

    if (isset($_POST['wp2fa_enable']) && wp_verify_nonce($_POST['wp2fa_nonce'], 'wp2fa_nonce')) {
        if (!$is_enabled) {
            $secret_key = wp2fa_generate_secret_key();
            update_user_meta($user_id, 'wp2fa_secret_key', $secret_key);
            update_user_meta($user_id, 'wp2fa_is_enabled', 1);
            $is_enabled = true;
            $is_activated = true;
        } else {
            delete_user_meta($user_id, 'wp2fa_secret_key');
            delete_user_meta($user_id, 'wp2fa_is_enabled');
            $is_enabled = false;
        }
    }

    // Une fois que l'authentification à deux facteurs est activée, envoyez les codes de secours par e-mail
    if ($is_activated) {
        wp2fa_request_recovery_codes($user->ID);
    }
}

// affichage du formulaire

function wp2fa_settings_fields() {
    $user = wp_get_current_user();
    $secret_key = get_user_meta($user->ID, 'wp2fa_secret_key', true);
    $is_enabled = get_user_meta($user->ID, 'wp2fa_is_enabled', true);
    $qr_code_url = wp2fa_generate_qr_code_url($secret_key, $user->user_email);

    echo '<h2>Authentification à deux facteurs</h2>';
    echo '<table class="form-table">';
    echo '<tr>';
    echo '<th scope="row">Activer l\'authentification à deux facteurs</th>';
    echo '<td>';
    echo '<form method="post">';
    wp_nonce_field('wp2fa_nonce', 'wp2fa_nonce');
    echo '<label for="wp2fa_enable">';
    echo '<input type="checkbox" name="wp2fa_enable" id="wp2fa_enable" value="1"' . ($is_enabled ? ' checked' : '') . '>';
    echo ' Activer';
    echo '</label>';
    echo '<p class="description">Cochez cette case pour activer l\'authentification à deux facteurs sur votre compte.</p>';
    echo '<input type="submit" class="button button-primary" value="Enregistrer les modifications">';
    echo '</form>';
    echo '</td>';
    echo '</tr>';

    if ($is_enabled) {
        echo '<tr>';
        echo '<th scope="row">QR Code</th>';
        echo '<td>';
        echo '<img src="' . $qr_code_url . '">';
        echo '<p class="description">Scannez ce QR code avec votre application d\'authentification à deux facteurs pour ajouter votre compte.</p>';
        echo '</td>';
        echo '</tr>';

        // Ajoutez un bouton pour demander de nouveaux codes de secours
        echo '<tr>';
        echo '<th scope="row">Codes de secours</th>';
        echo '<td>';
        echo '<form method="post" action="' . admin_url('admin-post.php') . '">';
        wp_nonce_field('wp2fa_request_recovery_codes_nonce', 'wp2fa_request_recovery_codes_nonce');
        echo '<input type="hidden" name="action" value="wp2fa_request_recovery_codes">';
        echo '<input type="submit" class="button button-primary" name="wp2fa_request_recovery_codes" value="Recevoir de nouveaux codes de sécurité">';
        echo '<p class="description">Cliquez sur ce bouton pour recevoir de nouveaux codes de secours par e-mail. Les anciens codes ne fonctionneront plus.</p>';
        echo '</form>';
        echo '</td>';
        echo '</tr>';
    }

    echo '</table>';
}


// 

function wp2fa_process_settings() {
    if (is_user_logged_in()) {
        wp2fa_enable_2fa();

        if (isset($_POST['wp2fa_request_recovery_codes']) && wp_verify_nonce($_POST['wp2fa_request_recovery_codes_nonce'], 'wp2fa_request_recovery_codes_nonce')) {
            wp2fa_request_recovery_codes(get_current_user_id());
        }
    }
}

//

function wp2fa_authenticate_user($user, $username, $password) {
    if (!empty($username) && !empty($password)) {
        $user = get_user_by('login', $username);
        
        if ($user && isset($user->ID)) {
            if (get_user_meta($user->ID, 'wp2fa_enabled', true) == '1') {
                if (!wp2fa_is_valid_code($user->ID)) {
                    return new WP_Error('wp2fa_code_required', __('Le code de vérification à deux facteurs est requis.'));
                }
            }
        }
    }
    
    return $user;
}

//  gerer les echecs de connexion

function wp2fa_login_failed($user) {
    $timestamp = get_user_meta($user->ID, 'wp2fa_login_timestamp', true);

    if (empty($timestamp)) {
        update_user_meta($user->ID, 'wp2fa_login_timestamp', time());
        update_user_meta($user->ID, 'wp2fa_login_nonce', wp_create_nonce('wp2fa_login_verify_nonce_' . $user->ID));
    } else {
        $elapsed_time = time() - $timestamp;

        if ($elapsed_time > 60 * 5) { // 5 minutes
            update_user_meta($user->ID, 'wp2fa_login_timestamp', time());
            update_user_meta($user->ID, 'wp2fa_login_nonce', wp_create_nonce('wp2fa_login_verify_nonce_' . $user->ID));
        }
    }

    wp_safe_redirect(wp_login_url() . '?wp2fa_error=1');
    exit;
}



// verifie le code totp

function is_valid_totp($user_id, $totp) {
    $secret = get_user_meta($user_id, 'wp2fa_secret', true);

    if (empty($secret)) {
        return false;
    }

    $google2fa = new PragmaRX\Google2FA\Google2FA();

    return $google2fa->verifyKey($secret, $totp);
}




function wp2fa_init() {
    // Vérifie si l'extension PHP "bcmath" est activée
    if (!extension_loaded('bcmath')) {
        add_action('admin_notices', 'wp2fa_bcmath_not_loaded_error');
        return;
    }

    // Ajout des actions et des filtres
	add_action('wp_login', 'wp2fa_login_verify', 10, 2);
    add_action('login_enqueue_scripts', 'wp2fa_enqueue_login_scripts');
    add_action('login_form', 'wp2fa_login_form');
    add_action('wp_login', 'wp2fa_authenticate_user', 10, 2);
    add_filter('authenticate', 'wp2fa_verify_code', 10, 3);

    add_action('show_user_profile', 'wp2fa_settings_fields');
    add_action('edit_user_profile', 'wp2fa_settings_fields');

    add_action('personal_options_update', 'wp2fa_enable_2fa');
    add_action('edit_user_profile_update', 'wp2fa_enable_2fa');
    add_action('admin_post_wp2fa_request_recovery_codes', 'wp2fa_request_recovery_codes');
}
